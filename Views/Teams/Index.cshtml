@model EsportsCalendar.ViewModels.TeamSearchModel

@{
    ViewData["Title"] = "Index";
}
<br />
@if (TempData["Error Message"] != null)
{
    <div class="col-lg-8 m-auto">
        <partial name="_ErrorMessagePartial" />
    </div>
}
<div class="row form-group d-flex justify-content-center">
    <h1 class="text-center w-100">Teams</h1>
    <p class="text-center">Here you can find details about the most popular teams and check when do they play!</p>
</div>
<br />
<div class="row mb-2">
    <div class="col-12"></div>
    <h6 class="text-center col-12">Find your team</h6>
</div>

<form method="post" asp-controller="Teams" asp-action="SearchTeamByName">

    @for (int i = 0; i < Model.Teams.Count; i++)
    {
        <input type="hidden" asp-for="@Model.Teams[i].Id" />
        <input type="hidden" asp-for="@Model.Teams[i].Name" />
    }

    <div class="row mb-2">
        <input name="searchString" type="text" placeholder="Teams Name" class="form-control m-auto col-lg-6" />
    </div>
    <div class="row">
        <button type="submit" class="btn btn-success m-auto">Search</button>
    </div>
</form>

<br />
<div class="row">
    <div class=" m-auto col-lg-9">
        <table class="table">
            <thead>
                <tr>
                    <th class="border-top-0">Game </th>
                    <th class="border-top-0">Team Name</th>
                    <th class="border-top-0"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var team in Model.PageOfTeams)
                {
                    <tr>
                        <td>
                            @if (team.CurrentVideogame.Name == "LoL")
                            {
                                <span>League of Legends</span>
                            }
                            else
                            {
                                @team.CurrentVideogame.Name
                            }
                        </td>
                        <td>
                            @team.Name
                        </td>
                        <td>
                            <a asp-controller="Teams" asp-action="TeamDetails" asp-route-teamId="@team.Id">Details</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @Html.PagedListPager(Model.PageOfTeams, page => Url.Action("Index", new { game = ViewBag.Game, timePeriod = ViewBag.TimePeriod, page = page }),
new X.PagedList.Mvc.Common.PagedListRenderOptionsBase {
UlElementClasses = new string[] { " pagination justify-content-center" },
LiElementClasses = new string[] { "page-item" },
PageClasses = new string[] { "page-link" }
})
    </div>
</div>
